# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Documentation`.
# Please instead update this file by running `tapioca dsl`.

# typed: true
class Documentation
  include GeneratedAttributeMethods

  module GeneratedAttributeMethods
    sig { returns(T.nilable(::ActiveSupport::TimeWithZone)) }
    def created_at; end

    sig { params(value: ::ActiveSupport::TimeWithZone).returns(::ActiveSupport::TimeWithZone) }
    def created_at=(value); end

    sig { returns(T::Boolean) }
    def created_at?; end

    sig { returns(T.nilable(::ActiveSupport::TimeWithZone)) }
    def created_at_before_last_save; end

    sig { returns(T.untyped) }
    def created_at_before_type_cast; end

    sig { returns(T::Boolean) }
    def created_at_came_from_user?; end

    sig { returns(T.nilable([T.nilable(::ActiveSupport::TimeWithZone), T.nilable(::ActiveSupport::TimeWithZone)])) }
    def created_at_change; end

    sig { returns(T.nilable([T.nilable(::ActiveSupport::TimeWithZone), T.nilable(::ActiveSupport::TimeWithZone)])) }
    def created_at_change_to_be_saved; end

    sig { returns(T::Boolean) }
    def created_at_changed?; end

    sig { returns(T.nilable(::ActiveSupport::TimeWithZone)) }
    def created_at_in_database; end

    sig { returns(T.nilable([T.nilable(::ActiveSupport::TimeWithZone), T.nilable(::ActiveSupport::TimeWithZone)])) }
    def created_at_previous_change; end

    sig { returns(T::Boolean) }
    def created_at_previously_changed?; end

    sig { returns(T.nilable(::ActiveSupport::TimeWithZone)) }
    def created_at_previously_was; end

    sig { returns(T.nilable(::ActiveSupport::TimeWithZone)) }
    def created_at_was; end

    sig { void }
    def created_at_will_change!; end

    sig { returns(T.nilable(::Integer)) }
    def id; end

    sig { params(value: ::Integer).returns(::Integer) }
    def id=(value); end

    sig { returns(T::Boolean) }
    def id?; end

    sig { returns(T.nilable(::Integer)) }
    def id_before_last_save; end

    sig { returns(T.untyped) }
    def id_before_type_cast; end

    sig { returns(T::Boolean) }
    def id_came_from_user?; end

    sig { returns(T.nilable([T.nilable(::Integer), T.nilable(::Integer)])) }
    def id_change; end

    sig { returns(T.nilable([T.nilable(::Integer), T.nilable(::Integer)])) }
    def id_change_to_be_saved; end

    sig { returns(T::Boolean) }
    def id_changed?; end

    sig { returns(T.nilable(::Integer)) }
    def id_in_database; end

    sig { returns(T.nilable([T.nilable(::Integer), T.nilable(::Integer)])) }
    def id_previous_change; end

    sig { returns(T::Boolean) }
    def id_previously_changed?; end

    sig { returns(T.nilable(::Integer)) }
    def id_previously_was; end

    sig { returns(T.nilable(::Integer)) }
    def id_was; end

    sig { void }
    def id_will_change!; end

    sig { void }
    def restore_created_at!; end

    sig { void }
    def restore_id!; end

    sig { void }
    def restore_slack_channel_id!; end

    sig { void }
    def restore_slack_timestamp!; end

    sig { void }
    def restore_slack_user_id!; end

    sig { void }
    def restore_text!; end

    sig { void }
    def restore_updated_at!; end

    sig { returns(T.nilable([T.nilable(::ActiveSupport::TimeWithZone), T.nilable(::ActiveSupport::TimeWithZone)])) }
    def saved_change_to_created_at; end

    sig { returns(T::Boolean) }
    def saved_change_to_created_at?; end

    sig { returns(T.nilable([T.nilable(::Integer), T.nilable(::Integer)])) }
    def saved_change_to_id; end

    sig { returns(T::Boolean) }
    def saved_change_to_id?; end

    sig { returns(T.nilable([T.nilable(::String), T.nilable(::String)])) }
    def saved_change_to_slack_channel_id; end

    sig { returns(T::Boolean) }
    def saved_change_to_slack_channel_id?; end

    sig { returns(T.nilable([T.nilable(::String), T.nilable(::String)])) }
    def saved_change_to_slack_timestamp; end

    sig { returns(T::Boolean) }
    def saved_change_to_slack_timestamp?; end

    sig { returns(T.nilable([T.nilable(::String), T.nilable(::String)])) }
    def saved_change_to_slack_user_id; end

    sig { returns(T::Boolean) }
    def saved_change_to_slack_user_id?; end

    sig { returns(T.nilable([T.nilable(::String), T.nilable(::String)])) }
    def saved_change_to_text; end

    sig { returns(T::Boolean) }
    def saved_change_to_text?; end

    sig { returns(T.nilable([T.nilable(::ActiveSupport::TimeWithZone), T.nilable(::ActiveSupport::TimeWithZone)])) }
    def saved_change_to_updated_at; end

    sig { returns(T::Boolean) }
    def saved_change_to_updated_at?; end

    sig { returns(T.nilable(::String)) }
    def slack_channel_id; end

    sig { params(value: T.nilable(::String)).returns(T.nilable(::String)) }
    def slack_channel_id=(value); end

    sig { returns(T::Boolean) }
    def slack_channel_id?; end

    sig { returns(T.nilable(::String)) }
    def slack_channel_id_before_last_save; end

    sig { returns(T.untyped) }
    def slack_channel_id_before_type_cast; end

    sig { returns(T::Boolean) }
    def slack_channel_id_came_from_user?; end

    sig { returns(T.nilable([T.nilable(::String), T.nilable(::String)])) }
    def slack_channel_id_change; end

    sig { returns(T.nilable([T.nilable(::String), T.nilable(::String)])) }
    def slack_channel_id_change_to_be_saved; end

    sig { returns(T::Boolean) }
    def slack_channel_id_changed?; end

    sig { returns(T.nilable(::String)) }
    def slack_channel_id_in_database; end

    sig { returns(T.nilable([T.nilable(::String), T.nilable(::String)])) }
    def slack_channel_id_previous_change; end

    sig { returns(T::Boolean) }
    def slack_channel_id_previously_changed?; end

    sig { returns(T.nilable(::String)) }
    def slack_channel_id_previously_was; end

    sig { returns(T.nilable(::String)) }
    def slack_channel_id_was; end

    sig { void }
    def slack_channel_id_will_change!; end

    sig { returns(T.nilable(::String)) }
    def slack_timestamp; end

    sig { params(value: T.nilable(::String)).returns(T.nilable(::String)) }
    def slack_timestamp=(value); end

    sig { returns(T::Boolean) }
    def slack_timestamp?; end

    sig { returns(T.nilable(::String)) }
    def slack_timestamp_before_last_save; end

    sig { returns(T.untyped) }
    def slack_timestamp_before_type_cast; end

    sig { returns(T::Boolean) }
    def slack_timestamp_came_from_user?; end

    sig { returns(T.nilable([T.nilable(::String), T.nilable(::String)])) }
    def slack_timestamp_change; end

    sig { returns(T.nilable([T.nilable(::String), T.nilable(::String)])) }
    def slack_timestamp_change_to_be_saved; end

    sig { returns(T::Boolean) }
    def slack_timestamp_changed?; end

    sig { returns(T.nilable(::String)) }
    def slack_timestamp_in_database; end

    sig { returns(T.nilable([T.nilable(::String), T.nilable(::String)])) }
    def slack_timestamp_previous_change; end

    sig { returns(T::Boolean) }
    def slack_timestamp_previously_changed?; end

    sig { returns(T.nilable(::String)) }
    def slack_timestamp_previously_was; end

    sig { returns(T.nilable(::String)) }
    def slack_timestamp_was; end

    sig { void }
    def slack_timestamp_will_change!; end

    sig { returns(T.nilable(::String)) }
    def slack_user_id; end

    sig { params(value: T.nilable(::String)).returns(T.nilable(::String)) }
    def slack_user_id=(value); end

    sig { returns(T::Boolean) }
    def slack_user_id?; end

    sig { returns(T.nilable(::String)) }
    def slack_user_id_before_last_save; end

    sig { returns(T.untyped) }
    def slack_user_id_before_type_cast; end

    sig { returns(T::Boolean) }
    def slack_user_id_came_from_user?; end

    sig { returns(T.nilable([T.nilable(::String), T.nilable(::String)])) }
    def slack_user_id_change; end

    sig { returns(T.nilable([T.nilable(::String), T.nilable(::String)])) }
    def slack_user_id_change_to_be_saved; end

    sig { returns(T::Boolean) }
    def slack_user_id_changed?; end

    sig { returns(T.nilable(::String)) }
    def slack_user_id_in_database; end

    sig { returns(T.nilable([T.nilable(::String), T.nilable(::String)])) }
    def slack_user_id_previous_change; end

    sig { returns(T::Boolean) }
    def slack_user_id_previously_changed?; end

    sig { returns(T.nilable(::String)) }
    def slack_user_id_previously_was; end

    sig { returns(T.nilable(::String)) }
    def slack_user_id_was; end

    sig { void }
    def slack_user_id_will_change!; end

    sig { returns(T.nilable(::String)) }
    def text; end

    sig { params(value: T.nilable(::String)).returns(T.nilable(::String)) }
    def text=(value); end

    sig { returns(T::Boolean) }
    def text?; end

    sig { returns(T.nilable(::String)) }
    def text_before_last_save; end

    sig { returns(T.untyped) }
    def text_before_type_cast; end

    sig { returns(T::Boolean) }
    def text_came_from_user?; end

    sig { returns(T.nilable([T.nilable(::String), T.nilable(::String)])) }
    def text_change; end

    sig { returns(T.nilable([T.nilable(::String), T.nilable(::String)])) }
    def text_change_to_be_saved; end

    sig { returns(T::Boolean) }
    def text_changed?; end

    sig { returns(T.nilable(::String)) }
    def text_in_database; end

    sig { returns(T.nilable([T.nilable(::String), T.nilable(::String)])) }
    def text_previous_change; end

    sig { returns(T::Boolean) }
    def text_previously_changed?; end

    sig { returns(T.nilable(::String)) }
    def text_previously_was; end

    sig { returns(T.nilable(::String)) }
    def text_was; end

    sig { void }
    def text_will_change!; end

    sig { returns(T.nilable(::ActiveSupport::TimeWithZone)) }
    def updated_at; end

    sig { params(value: ::ActiveSupport::TimeWithZone).returns(::ActiveSupport::TimeWithZone) }
    def updated_at=(value); end

    sig { returns(T::Boolean) }
    def updated_at?; end

    sig { returns(T.nilable(::ActiveSupport::TimeWithZone)) }
    def updated_at_before_last_save; end

    sig { returns(T.untyped) }
    def updated_at_before_type_cast; end

    sig { returns(T::Boolean) }
    def updated_at_came_from_user?; end

    sig { returns(T.nilable([T.nilable(::ActiveSupport::TimeWithZone), T.nilable(::ActiveSupport::TimeWithZone)])) }
    def updated_at_change; end

    sig { returns(T.nilable([T.nilable(::ActiveSupport::TimeWithZone), T.nilable(::ActiveSupport::TimeWithZone)])) }
    def updated_at_change_to_be_saved; end

    sig { returns(T::Boolean) }
    def updated_at_changed?; end

    sig { returns(T.nilable(::ActiveSupport::TimeWithZone)) }
    def updated_at_in_database; end

    sig { returns(T.nilable([T.nilable(::ActiveSupport::TimeWithZone), T.nilable(::ActiveSupport::TimeWithZone)])) }
    def updated_at_previous_change; end

    sig { returns(T::Boolean) }
    def updated_at_previously_changed?; end

    sig { returns(T.nilable(::ActiveSupport::TimeWithZone)) }
    def updated_at_previously_was; end

    sig { returns(T.nilable(::ActiveSupport::TimeWithZone)) }
    def updated_at_was; end

    sig { void }
    def updated_at_will_change!; end

    sig { returns(T::Boolean) }
    def will_save_change_to_created_at?; end

    sig { returns(T::Boolean) }
    def will_save_change_to_id?; end

    sig { returns(T::Boolean) }
    def will_save_change_to_slack_channel_id?; end

    sig { returns(T::Boolean) }
    def will_save_change_to_slack_timestamp?; end

    sig { returns(T::Boolean) }
    def will_save_change_to_slack_user_id?; end

    sig { returns(T::Boolean) }
    def will_save_change_to_text?; end

    sig { returns(T::Boolean) }
    def will_save_change_to_updated_at?; end
  end
end